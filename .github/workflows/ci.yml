name: ci pipeline 
on:
   push:

permissions:
   id-token: write
   contents: read

jobs:
   integration:
     name: continuous integration
     runs-on: ubuntu-latest

     steps:
       - name: checkout code
         uses: actions/checkout@v3

       - name: lint code
         run: echo 'linting repository'
   
   built-and-push-ecr-image:
     name: push to ecr 
     needs: integration
     runs-on: ubuntu-latest 

     steps:
     - name: Checkout
       uses: actions/checkout@v3

     - name: install utilities
       run: |
        sudo apt-get update
        sudo apt-get install -y jq unzip

     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

     - name: Login to Amazon ECR
       id: login-ecr
       uses: aws-actions/amazon-ecr-login@v1

     - name: Build, tag, and push image to Amazon ECR
       id: build-image
       env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPOSITORY_NAME }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}   
        IMAGE_TAG: latest_1
       run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS...
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

   continuous-deployment:     
     name: continuous-deployment
     runs-on: ubuntu-latest
     needs: built-and-push-ecr-image

     steps:
     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

     - name: Login to Amazon ECR
       id: login-ecr
       uses: aws-actions/amazon-ecr-login@v1      

     - name: pull image
       id: pull-image
       env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}  
        ECR_REPOSITORY: ${{ secrets.REPOSITORY_NAME }}
        IMAGE_TAG: latest_1
       run: |       
        docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

     - name: delete previous container
       run: |
        docker rm -f nyc_taxi || true

     - name: push to docker container
       run: |
        docker run -d -p 8080:8080 --ipc="host" --name=creditcard -e 'AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}' -e 'AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}' -e 'AWS_REGION=${{ secrets.AWS_REGION }}'  ${{secrets.AWS_ECR_LOGIN_URI}}/${{ secrets.ECR_REPOSITORY_NAME }}:latest        